---
- name: aptly - install required packages
  package:
    name: "{{ item }}"
    state: present
  become: true
  with_items:
    - haveged

- name: aptly - start/enable required services
  service:
    name: "{{ item }}"
    state: started
    enabled: yes
  become: true
  with_items:
    - haveged

- name: aptly - create required directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ operator_user }}"
    group: "{{ operator_group }}"
    mode: 0750
  become: true
  with_items:
    - "{{ aptly_configuration_directory }}"
    - "{{ aptly_docker_compose_directory }}"

- name: aptly - copy configuration files
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: 0640
    owner: "{{ operator_user }}"
    group: "{{ operator_group }}"
  with_items:
    - src: aptly/aptly.conf.j2
      dest: "{{ aptly_configuration_directory }}/aptly.conf"
    - src: aptly/nginx.conf.j2
      dest: "{{ aptly_configuration_directory }}/nginx.conf"

- name: aptly - copy docker-compose.yml file
  template:
    src: aptly/docker-compose.yml.j2
    dest: "{{ aptly_docker_compose_directory }}/docker-compose.yml"
    owner: "{{ operator_user }}"
    group: "{{ operator_group }}"
    mode: 0640

- name: aptly - pull images
  command: "docker-compose -f {{ aptly_docker_compose_directory }}/docker-compose.yml pull"
  register: result
  changed_when: ('Downloaded' in result.stdout)

- name: aptly - run service
  command: "docker-compose -f {{ aptly_docker_compose_directory }}/docker-compose.yml up -d --remove-orphans --no-build"
  register: result
  changed_when: ('Creating' in result.stdout or 'Recreating' in result.stdout)
