---
- name: nexus - gather the apt package facts
  package_facts:
    manager: auto

- name: nexus - create required directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ operator_user }}"
    group: "{{ operator_group }}"
    mode: 0750
  become: true
  with_items:
    - "{{ nexus_configuration_directory }}"
    - "{{ nexus_docker_compose_directory }}"

- name: nexus - copy docker-compose.yml file
  template:
    src: nexus/docker-compose.yml.j2
    dest: "{{ nexus_docker_compose_directory }}/docker-compose.yml"
    owner: "{{ operator_user }}"
    group: "{{ operator_group }}"
    mode: 0640

- name: nexus - run service
  docker_compose:
    project_src: "{{ nexus_docker_compose_directory }}"
    build: false
    pull: true
    remove_orphans: true
  when: "'docker-compose' in ansible_facts.packages"

# NOTE: If docker-compose was not installed by package, the Python bindings are not available.
#       Therefore in this case docker-compose is called directly.

- name: nexus - pull images
  command: "docker-compose -f {{ nexus_docker_compose_directory }}/docker-compose.yml pull"
  register: result
  changed_when: ('Downloaded' in result.stdout)
  when: "'docker-compose' not in ansible_facts.packages"

- name: nexus - run service
  command: "docker-compose -f {{ nexus_docker_compose_directory }}/docker-compose.yml up -d --remove-orphans --no-build"
  register: result
  changed_when: ('Creating' in result.stdout or 'Recreating' in result.stdout)
  when: "'docker-compose' not in ansible_facts.packages"
